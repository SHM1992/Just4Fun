// GetUglyNumber.cpp : get the n-th ugly number

#include "stdafx.h"
#include <iostream>
using namespace std;

int Min(int number1, int number2, int number3){
	
	int min = (number1<=number2) ? number1 : number2;
	min = (min<=number3) ? min : number3;
	return min;
}

int GetUglyNumber(int n){

	if(n<=0)return 0;
	int *pUglyNumbers = new int[n];
	pUglyNumbers[0] = 1;
	int i = 1;
	
	int *pMultiply2 = pUglyNumbers;
	int *pMultiply3 = pUglyNumbers;
	int *pMultiply5 = pUglyNumbers;
	
	while(i<n){
		int min = Min(*pMultiply2*2,*pMultiply3*3,*pMultiply5*5);
		pUglyNumbers[i] = min;

		while(*pMultiply2*2<=pUglyNumbers[i])
			pMultiply2++;
		while(*pMultiply3*3<=pUglyNumbers[i])
			pMultiply3++;
		while(*pMultiply5*5<=pUglyNumbers[i])
			pMultiply5++;
		i++;
	}
	int ugly = pUglyNumbers[n-1];
	delete[] pUglyNumbers;
	return ugly;
}

int _tmain(int argc, _TCHAR* argv[])
{
	int n;
	while(cin>>n){
		cout<<"the "<<n<<"-th ugly number is "<<GetUglyNumber(n)<<endl;
	}
	return 0;
}